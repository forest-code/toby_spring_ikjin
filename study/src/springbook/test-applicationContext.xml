<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/jdbc
						http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
	<context:annotation-config />
	<tx:annotation-driven />
	
	<jdbc:embedded-database id="embeddedDatabase" type="HSQL">
		<jdbc:script location="classpath:springbook/sql/schema.sql" />
	</jdbc:embedded-database>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" >
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/springdb" />
		<property name="username" value="SPRINGUSER" />
		<property name="password" value="admin" />
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="userLevelUpgradePolicy" class="springbook.user.domain.UserLevelUpgradePolicyA" />

	<bean id="mailSender" class="springbook.user.service.DummyMailSender" /> 
	
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />
	
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
<!-- 	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl"> -->
<!-- 		<property name="userDao" ref="userDao" /> -->
<!-- 		<property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy" /> -->
<!-- 		<property name="mailSender" ref="mailSender" /> -->
<!-- 	</bean> -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="userDao" class="springbook.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqlService" ref="sqlService" />
	</bean>
	
<!-- 	<bean id="sqlServie" class="springbook.user.sqlservice.BaseSqlService"> -->
<!-- 		<property name="sqlReader" ref="sqlReader" /> -->
<!-- 		<property name="sqlRegistry" ref="sqlRegistry" /> -->
<!-- 	</bean> -->
	
	<bean id="sqlService" class="springbook.user.sqlservice.OxmSqlService">
		<property name="unmarshaller" ref="unmarshaller" />
<!-- 		<property name="sqlmap" value="classpath:springbook/user/dao/sqlmap.xml" /> -->
<!-- 		<property name="sqlmap" value="file:/D:/git_study/study/src/springbook/dao/sqlmap.xml" /> -->
<!-- 		<property name="sqlmap" value="http://www.epril.com/resources/sqlmap.xml" /> -->
		<property name="sqlRegistry" ref="sqlRegistry" />
	</bean>
	
	<bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="springbook.user.sqlservice.jaxb" />
	</bean>
	
	<bean id="sqlReader" class="springbook.user.sqlservice.JaxbXmlSqlReader">
		<property name="sqlmapFile" value="sqlmap.xml" />
	</bean>
	
<!-- 	<bean id="sqlRegistry" class="springbook.user.sqlservice.HashMapSqlRegistry"> -->
<!-- 	<bean id="sqlRegistry" class="springbook.user.sqlservice.updatable.ConcurrentHashMapSqlRegistry" /> -->
<bean id="sqlRegistry" class="springbook.user.sqlservice.updatable.EmbeddedDbSqlRegistry" >
	<property name="dataSource" ref="embeddedDatabase" />
</bean>
	
<!-- 	<bean id="sqlAdminService" class="springbook.user.sqlservice.SqlAdminService" > -->
<!-- 		<property name="updatableSqlRegistry" ref="sqlRegistry" /> -->
<!-- 	</bean> -->
	
	<bean id="jdbcContext" class="springbook.user.dao.JdbcContext">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
<!-- 	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice"> -->
<!-- 		<property name="transactionManager" ref="transactionManager" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="transactionPointcut" class="springbook.learningtest.jdk.proxy.NameMatchClassMethodPointcut"> -->
<!-- 		<property name="mappedClassName" value="*ServiceImpl" /> -->
<!-- 		<property name="mappedName" value="upgrade*" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut"> -->
<!-- 		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"> -->
<!-- 		<property name="advice" ref="transactionAdvice" /> -->
<!-- 		<property name="pointcut" ref="transactionPointcut" /> -->
<!-- 	</bean> -->

<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))" /> -->
<!-- 		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" /> -->
<!-- 		<aop:advisor advice-ref="batchTxAdvice" pointcut="execution(* *..*BatchJob.*(..))" /> -->
<!-- 	</aop:config> -->
	
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Servcie)" />
	</aop:config>
	
<!-- 	<bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor"> -->
<!-- 		<property name="transactionManager" ref="transactionManager" /> -->
<!-- 		<property name="transactionAttributes" > -->
<!-- 			<props> -->
<!-- 				<prop key="get*">PROPAGATION_REQUIRED,readOnly,timeout_30</prop> -->
<!-- 				<prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop> -->
<!-- 				<prop key="*">PROPAGATION_REQUIRED</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
<!-- 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30" /> -->
<!-- 			<tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE" /> -->
<!-- 			<tx:method name="*" propagation="REQUIRED" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
	
<!-- 	<bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor"> -->
<!-- 		<property name="transactionManager" ref="transactionManager" /> -->
<!-- 		<property name="transactionAttributes"> -->
<!-- 			<props> -->
<!-- 				<prop key="get*">PROPAGATION_REQUIRED, readOnly</prop> -->
<!-- 				<prop key="*">PROPAGATION_REQUIRED</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<tx:advice id="batchTxAdvice">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>